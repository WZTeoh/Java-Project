
package javaassignmentclinicappointmentmanagementsystem;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Calendar;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;



public class ClinicStaffTimetable extends javax.swing.JFrame {
    String optMon;
    String optDay;
    String optYear;
    String optHour;
    String optMin;
    String optAmPm;
    
    String dateForm = optMon + optDay + optYear;
    String timeForm = optHour + optMin + optAmPm;
    
    Connection Con = null;
    PreparedStatement pat = null; 
    ResultSet rs = null; 
    Statement st = null; 
    
    
    
    
    /*
    File file = new File("\"C:\\Users\\user\\Desktop\\ClinicAppointmentSystemStaffTimeslot.xlsx\"");
    
    try{
    FileWriter fw = new FileWriter(file);
    
    for(int i =0; i<str.length();i++){
        fw.write(str.charAt(i));
        
        System.out.println("Successfully written");
        
        fw.close();
    }
    catch (Exception e){
            e.getStackTrace();
            }
}
    
    
    PrintWriter pw = new PrintWriter(fw);
    
    pw.println("Line A"); 
    */
    
    /**
     * Creates new form ClinicStaffTimetable
     */
    public ClinicStaffTimetable() {
        
        initComponents();
        setTitle("Clinic Staff Timeslot");
        setLocationRelativeTo(null); //Location set to center
        setVisible(true);
        
        String filePath = "\"C:\\Users\\user\\Desktop\\ClinicAppointmentSystemStaffTimeslot.xlsx\"";
        File file = new File(filePath);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel model = (DefaultTableModel)tableRec.getModel();
            //model.setColumnIdentifiers(new Array[]{"No.","Available Date","Available Time"});
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ClinicStaffTimetable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        /*
        FileWriter writer;
        try {
            writer = new FileWriter("\"C:\\Users\\user\\Desktop\\ClinicAppointmentSystemStaffTimeslot.xlsx\"");
            writer.write("1");
            writer.write("2");
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }*/
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCST = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        labelTime = new javax.swing.JLabel();
        comboMonth = new javax.swing.JComboBox<>();
        comboDay = new javax.swing.JComboBox<>();
        comboYear = new javax.swing.JComboBox<>();
        comboHour = new javax.swing.JComboBox<>();
        comboMin = new javax.swing.JComboBox<>();
        comboAmPm = new javax.swing.JComboBox<>();
        labelRec = new javax.swing.JLabel();
        butAdd = new javax.swing.JButton();
        butRem = new javax.swing.JButton();
        butClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRec = new javax.swing.JTable();
        butBackMain = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelCST.setText("Clinic Staff Timetable");

        labelDate.setText("Date: ");

        labelTime.setText("Time: ");

        comboMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"}));
        comboMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMonthActionPerformed(evt);
            }
        });

        comboDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));

        comboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025"}));

        comboHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}));

        comboMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33","34","35","36","37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47","48","49","50","51","52","53","54","55","56","57","58", "59"}));

        comboAmPm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM"}));

        labelRec.setText("Record of the timeslot of timetable ");

        butAdd.setText("Add");
        butAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddActionPerformed(evt);
            }
        });

        butRem.setText("Remove");
        butRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemActionPerformed(evt);
            }
        });

        butClose.setText("Close");
        butClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCloseActionPerformed(evt);
            }
        });

        tableRec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "No. ", "Available Date", "Available Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRec);

        butBackMain.setText("Back to Main Menu");
        butBackMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelRec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboAmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelCST, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(butAdd)
                .addGap(59, 59, 59)
                .addComponent(butRem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butBackMain)
                .addGap(31, 31, 31)
                .addComponent(butClose)
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(labelCST)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDate)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTime)
                    .addComponent(comboHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(labelRec))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butClose)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(butRem)
                        .addComponent(butAdd)
                        .addComponent(butBackMain)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Your timeslot has been added!");
        
        /*
        File file = new File("\"C:\\Users\\user\\Desktop\\ClinicAppointmentSystemStaffTimeslot.xlsx\"");
        Workbook wb = Workbook.getWorkbook(file);
        */
        
        optMon = (String) comboMonth.getSelectedItem();
        optDay = (String) comboDay.getSelectedItem();
        optYear = (String) comboYear.getSelectedItem();
        String comDate = optMon + " " + optDay + ", " + optYear;
        optHour = (String) comboHour.getSelectedItem();
        optMin = (String) comboMin.getSelectedItem();
        optAmPm = (String) comboAmPm.getSelectedItem();
        String comTime = optHour +":"+ optMin + optAmPm;
        
        int rowCount;
        Array[] array = new Array[]{};
        
        
        DefaultTableModel tblModel = (DefaultTableModel)tableRec.getModel();
        
        for(int i=0; i<tblModel.getRowCount();i++){
            //System.out.println(i);
            rowCount = i;
        }
        //add String array data
        //tblModel.addRow(new String[]{"", comDate, comTime});
        
               
    }//GEN-LAST:event_butAddActionPerformed

    private void butRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butRemActionPerformed

    private void butCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCloseActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_butCloseActionPerformed

    private void comboMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMonthActionPerformed

    private void butBackMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackMainActionPerformed
        // TODO add your handling code here:
        dispose();
        ClinicStaffMainMenu csmm = new ClinicStaffMainMenu();
    }//GEN-LAST:event_butBackMainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClinicStaffTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClinicStaffTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClinicStaffTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClinicStaffTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClinicStaffTimetable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAdd;
    private javax.swing.JButton butBackMain;
    private javax.swing.JButton butClose;
    private javax.swing.JButton butRem;
    private javax.swing.JComboBox<String> comboAmPm;
    private javax.swing.JComboBox<String> comboDay;
    private javax.swing.JComboBox<String> comboHour;
    private javax.swing.JComboBox<String> comboMin;
    private javax.swing.JComboBox<String> comboMonth;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCST;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelRec;
    private javax.swing.JLabel labelTime;
    private javax.swing.JTable tableRec;
    // End of variables declaration//GEN-END:variables
}
